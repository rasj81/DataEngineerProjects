## Build environment for Data Engineer Zoomcamp ##

volumes:
  postgres-data:
    driver: local
  kestra-data:
    driver: local

services:
  python:
    container_name: python
    build:
      context: ./python
      dockerfile: Dockerfile
    image: python:3.9.1
    volumes:
      - "../Volumes/python_data:/app:rw"
  jupyter:
    container_name: jupyter
    build:
      context: ./jupyter
      dockerfile: Dockerfile
    image: jupyter/pyspark-notebook
    volumes:
      - "../Volumes/jupyter_data:/home/codespace/work:rw"
      - "../Volumes/jupyter-secrets:/etc/secrets:rw"
      - "../Volumes/jupyter-spark_data:/sparkdata:rw"
    command:
     "start-notebook.sh --NotebookApp.token='jupyter'"
    ports:
      - "8888:8888"
    user: root
    working_dir: /home/codespace/work
    environment:
      JUPYTER_ENABLE_LAB: 1
      NB_USER: ${USER}
      NB_GID: 1000
      CHOWN_HOME: 'yes' 
      CHOWN_HOME_OPTS: '-R'   
  pgdatabase:
    container_name: pgdatabase
    build:
      context: ./pgdatabase
      dockerfile: Dockerfile
    image: postgres:13
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=ny_taxi
    volumes:
      - "../Volumes/ny_taxi_postgres_data:/var/lib/postgresql/data:rw"
    ports:
      - "5432:5432"
  pgadmin:
    container_name: pgadmin
    build:
      context: ./pgadmin
      dockerfile: Dockerfile
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=root
    volumes:
      - "../Volumes/pgadmin_data/pgadmin:/var/lib/pgadmin:rw"
    ports:
      - "8088:80"
  
 ## Kestra Setup 
  postgres:
    image: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: kestra
      POSTGRES_USER: kestra
      POSTGRES_PASSWORD: k3str4
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 10
  kestra:
    image: kestra/kestra:v0.20.13
    pull_policy: always
    # Note that this setup with a root user is intended for development purpose.
    # Our base image runs without root, but the Docker Compose implementation needs root to access the Docker socket
    # To run Kestra in a rootless mode in production, see: https://kestra.io/docs/installation/podman-compose
    user: "root"
    command: server standalone
    volumes:
      - kestra-data:/app/storage
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/kestra-wd:/tmp/kestra-wd
    environment:
      KESTRA_CONFIGURATION: |
        datasources:
          postgres:
            url: jdbc:postgresql://postgres:5432/kestra
            driverClassName: org.postgresql.Driver
            username: kestra
            password: k3str4
        kestra:
          server:
            basicAuth:
              enabled: false
              username: "admin@kestra.io" # it must be a valid email address
              password: kestra
          repository:
            type: postgres
          storage:
            type: local
            local:
              basePath: "/app/storage"
          queue:
            type: postgres
          tasks:
            tmpDir:
              path: /tmp/kestra-wd/tmp
          url: http://localhost:8080/
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_started
